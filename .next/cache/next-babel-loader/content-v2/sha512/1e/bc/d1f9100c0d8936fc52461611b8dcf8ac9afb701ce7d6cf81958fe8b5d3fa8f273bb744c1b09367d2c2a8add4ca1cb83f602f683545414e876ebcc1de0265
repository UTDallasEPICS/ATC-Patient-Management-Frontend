{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jeremiahjoseph/Desktop/ATC-Patient-Management-Frontend/pages/login.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Image from 'next/image'; //Gets Login function and error function to help loggin in logic\n\nvar Login = function Login(_ref) {\n  _s();\n\n  var loginf = _ref.loginf,\n      error = _ref.error;\n\n  var _useState = useState({\n    name: \"\",\n    password: \"\"\n  }),\n      details = _useState[0],\n      setDetails = _useState[1];\n\n  var submitHandler = function submitHandler(e) {\n    e.preventDefault();\n    loginf(details);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        id: \"loginLogo\",\n        src: \"/logo.jpeg\",\n        alt: \"logo\",\n        width: 250,\n        height: 250\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, _this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 102\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginData\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlfor: \"name\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginData\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlfor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          id: \"password\",\n          onChange: function onChange(e) {\n            return setDetails(_objectSpread(_objectSpread({}, details), {}, {\n              name: e.target.value\n            }));\n          },\n          value: details.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"input\", _defineProperty({\n        className: \"loginButton\",\n        type: \"submit\",\n        value: \"Sign In\",\n        onChange: function onChange(e) {\n          return setDetails(_objectSpread(_objectSpread({}, details), {}, {\n            password: e.target.value\n          }));\n        }\n      }, \"value\", details.password), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"loginButton\",\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Login, \"RrzA1GXJzoCL46cyQSAe3l7SAkY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/jeremiahjoseph/Desktop/ATC-Patient-Management-Frontend/pages/login.js"],"names":["React","useState","Image","Login","loginf","error","name","password","details","setDetails","submitHandler","e","preventDefault","target","value"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,YAAlB,C,CAEA;;AACA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAsB;AAAA;;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,KAAW,QAAXA,KAAW;;AAAA,kBACFJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAAD,CADN;AAAA,MACzBC,OADyB;AAAA,MAChBC,UADgB;;AAEhC,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,CAAC,EAAI;AACvBA,IAAAA,CAAC,CAACC,cAAF;AAEAR,IAAAA,MAAM,CAACI,OAAD,CAAN;AACH,GAJD;;AAKA,sBACI;AAAA,2BACG;AAAM,MAAA,QAAQ,EAAGE,aAAjB;AAAA,8BACK,QAAC,KAAD;AAAO,QAAA,EAAE,EAAG,WAAZ;AAAwB,QAAA,GAAG,EAAG,YAA9B;AAA2C,QAAA,GAAG,EAAE,MAAhD;AAAuD,QAAA,KAAK,EAAG,GAA/D;AAAoE,QAAA,MAAM,EAAI;AAA9E;AAAA;AAAA;AAAA;AAAA,eADL,oBAC0F;AAAA;AAAA;AAAA;AAAA,eAD1F,eAEK;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,UAAA,IAAI,EAAE,MAAb;AAAoB,UAAA,IAAI,EAAE,MAA1B;AAAiC,UAAA,EAAE,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAFL,eAMK;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA,gCACI;AAAO,UAAA,OAAO,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,UAAA,IAAI,EAAE,MAAb;AAAoB,UAAA,IAAI,EAAE,UAA1B;AAAqC,UAAA,EAAE,EAAE,UAAzC;AAAoD,UAAA,QAAQ,EAAE,kBAAAC,CAAC;AAAA,mBAAIF,UAAU,iCAAKD,OAAL;AAAcF,cAAAA,IAAI,EAAEK,CAAC,CAACE,MAAF,CAASC;AAA7B,eAAd;AAAA,WAA/D;AAAmH,UAAA,KAAK,EAAGN,OAAO,CAACF;AAAnI;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eANL,eAWK;AAAO,QAAA,SAAS,EAAG,aAAnB;AAAiC,QAAA,IAAI,EAAG,QAAxC;AAAiD,QAAA,KAAK,EAAG,SAAzD;AAAmE,QAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,iBAAIF,UAAU,iCAAKD,OAAL;AAAcD,YAAAA,QAAQ,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAjC,aAAd;AAAA;AAA9E,kBAA8IN,OAAO,CAACD,QAAtJ;AAAA;AAAA;AAAA;AAAA,eAXL,eAYK;AAAQ,QAAA,SAAS,EAAG,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAZL;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,WADJ;AAmBH,CA1BD;;GAAMJ,K;;KAAAA,K;AA4BN,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react'\nimport Image from 'next/image'\n\n//Gets Login function and error function to help loggin in logic\nconst Login = ({ loginf, error}) => {\n    const [details, setDetails] = useState({name: \"\", password: \"\"}); \n    const submitHandler = e => {\n        e.preventDefault(); \n\n        loginf(details); \n    }\n    return (\n        <div>\n           <form onSubmit= {submitHandler}>\n                <Image id = 'loginLogo' src = '/logo.jpeg' alt= 'logo' width ={250} height = {250}/> <br/>\n                <div className= \"loginData\">\n                    <label htmlfor= \"name\">Username:</label>\n                    <input type= \"text\" name= \"name\" id= \"name\" /> \n                </div>\n                <div className= \"loginData\">\n                    <label htmlfor= \"password\">Password:</label>\n                    <input type= \"text\" name= \"password\" id= \"password\" onChange={e => setDetails({...details, name: e.target.value})} value ={details.name}/> \n                </div> \n\n                <input className = \"loginButton\" type = \"submit\" value = \"Sign In\" onChange={e => setDetails({...details, password: e.target.value})} value ={details.password}/>\n                <button className = \"loginButton\">Forgot Password</button> \n            </form>\n            \n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}